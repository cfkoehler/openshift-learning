apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "shared-storage-example.fullname" . }}-app
  labels:
    {{- include "shared-storage-example.labels" . | nindent 4 }}
    component: application
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "shared-storage-example.selectorLabels" . | nindent 6 }}
      component: application
  template:
    metadata:
      labels:
        {{- include "shared-storage-example.selectorLabels" . | nindent 8 }}
        component: application
    spec:
      containers:
      - name: data-processor
        image: "{{ .Values.images.deployment.repository }}:{{ .Values.images.deployment.tag }}"
        imagePullPolicy: {{ .Values.images.deployment.pullPolicy }}
        volumeMounts:
        - name: shared-storage
          mountPath: /app/data
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        command: ["/bin/sh"]
        args:
        - -c
        - |
          while true; do
            echo "$(date): Application processing shared data on node $NODE_NAME" >> /app/data/app.log
            if [ -f /app/data/daemon2.log ]; then
              echo "Found daemon2 log, processing..." >> /app/data/app.log
              tail -5 /app/data/daemon2.log >> /app/data/processed-daemon2.log
            fi
            sleep 60
          done
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: {{ include "shared-storage-example.fullname" . }}-shared-pvc
      # Ensure deployment lands on nodes where DaemonSets are running
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}